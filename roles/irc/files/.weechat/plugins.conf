#
# plugins.conf -- weechat v0.4.2
#

[var]
fifo.fifo = "on"
guile.check_license = "on"
lua.check_license = "on"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.check_license = "on"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.ryder.#deployments = "on"
perl.highmon.ryder.#meating = "on"
perl.highmon.short_names = "off"
perl.pushover.blacklist = ""
perl.pushover.enabled = "on"
perl.pushover.nma_apikey = ""
perl.pushover.only_if_away = "on"
perl.pushover.only_if_inactive = "off"
perl.pushover.pb_apikey = ""
perl.pushover.pb_device_iden = ""
perl.pushover.priority = ""
perl.pushover.rate_limit = "0"
perl.pushover.redact_priv_msg = "off"
perl.pushover.service = "pushbullet"
perl.pushover.short_name = "off"
perl.pushover.show_highlights = "on"
perl.pushover.show_priv_msg = "on"
perl.pushover.sound = ""
perl.pushover.token = ""
perl.pushover.user = ""
perl.pushover.verbose = "1"
python.check_license = "on"
python.tinyurl.activechans = "clear"
python.tinyurl.debug = "off"
python.tinyurl.printall = "on"
python.tinyurl.service = "tinyurl"
python.tinyurl.urllength = "30"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_port = ""
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.pushover.blacklist = "Comma separated list of buffers (full name) to blacklist for notifications (wildcard "*" is allowed, name beginning with "!" is excluded) (default: "")"
perl.pushover.enabled = "Turn script on or off (default: "on")"
perl.pushover.nma_apikey = "nma API key (default: "")"
perl.pushover.only_if_away = "Notify only if away status is active (default: "off")"
perl.pushover.only_if_inactive = "Notify only if buffer is not the active (current) buffer (default: "off")"
perl.pushover.pb_apikey = "Pushbullet API key (default: "")"
perl.pushover.pb_device_iden = "Device Iden of pushbullet device (default: "")"
perl.pushover.priority = "priority (empty for default) (default: "")"
perl.pushover.rate_limit = "Rate limit in seconds (0 = unlimited), will send a maximum of 1 notification per time limit (default: "0")"
perl.pushover.redact_priv_msg = "When receiving private message notifications, hide the actual message text (default: "off")"
perl.pushover.service = "Notification service to use. Multiple services may be supplied as comma separated list. (supported services: pushover, nma, pushbullet) (default: "pushover")"
perl.pushover.short_name = "Use short buffer name in notification (default: "off")"
perl.pushover.show_highlights = "Notify on highlights (default: "on")"
perl.pushover.show_priv_msg = "Notify on private messages (default: "on")"
perl.pushover.sound = "Sound (empty for default) (default: "")"
perl.pushover.token = "pushover API token/key (You may feel free to use your own token, so you get your own monthly quota of messages without being affected by other users. See also: https://pushover.net/faq#overview-distribution ) (default: "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S")"
perl.pushover.user = "pushover user key (default: "")"
perl.pushover.verbose = "Verbosity level (0 = silently ignore any errors, 1 = display brief error, 2 = display full server response) (default: "1")"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (default: "")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
