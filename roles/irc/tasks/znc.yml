---
- name: Check OS compatibility
  assert:
    that:
      - ansible_distribution in [ 'Ubuntu' ]

- name: Asset Ubuntu version compatibility
  assert:
    that:
      - ansible_distribution_version in [ '12.04','14.04','14.10' ]

- name: Configure for ZNC PPA #advised from http://wiki.znc.in/Installation#Ubuntu
  become: true
  apt_repository:
    repo: 'ppa:teward/znc'

- name: Configure for ZNC PPA on Ubuntu #advised from http://wiki.znc.in/Installation#Ubuntu
  become: true
  apt_repository:
    repo: 'ppa:teward/swig3.0'

- name: Install ZNC
  become: true
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - znc
    - swig3.0

- name: Install systemd script
  become: true
  template:
    src: systemd.j2
    dest: /etc/systemd/system/znc.service
    owner: root
    group: root
    mode: 0644
  register: znc_systemd_installed
  notify: znc_systemd
  when: znc_service

- name: Remove systemd script
  become: true
  file:
    dest: /etc/systemd/system/znc.service
    state: absent
  when: not znc_service

- name: Install upstart script
  become: true
  template:
    src: upstart.j2
    dest: /etc/init/znc.conf
    owner: root
    group: root
    mode: 0644
  register: znc_upstart_installed
  notify: znc
  when: znc_service

- name: Remove upstart script
  become: true
  file:
    dest: /etc/init/znc.conf
    state: absent
  when: not znc_service

- command: initctl reload-configuration
  become: true
  when: znc_upstart_installed|changed

- name: Create directory tree
  file:
    path: "{{ znc_config_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0750

- name: open znc port
  become: true
  ufw: rule=allow port={{ znc_port }} proto=tcp

- name: Self-signed SSL certificate
  become: true
  command: znc --datadir={{ znc_datadir }} --makepem
  args:
    creates: "{{ znc_datadir }}/znc.pem"
  become_user: "{{ ansible_user }}"
  notify: znc
  when: znc_ssl

- name: Forcibly remove config
  file:
    path: "{{ znc_datadir }}/configs/znc.conf"
    state: absent
  when: znc_force_config_refresh

- name: Check for config
  stat:
    path: "{{ znc_datadir }}/configs/znc.conf"
  register: znc_config_stat

- name: Install starting configuration
  template:
    src: znc.conf.j2
    dest: "{{ znc_datadir }}/configs/znc.conf"
  when: znc_config_stat.stat.exists == false
  notify: znc

- name: Configuration ownership
  file:
    path: "{{ znc_datadir }}/configs/znc.conf"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600
